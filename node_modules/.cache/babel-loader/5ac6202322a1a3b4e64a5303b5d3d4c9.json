{"ast":null,"code":"var _jsxFileName = \"/Users/chitrakannanb/Documents/ReactLearning/DummyLogin/01-starting-project/src/store/auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const isLoggedInInfoLocalStorage = localStorage.getItem(\"isLoggedIn\");\n  useEffect(() => {\n    if (isLoggedInInfoLocalStorage === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, [isLoggedIn]);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(AuthContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/chitrakannanb/Documents/ReactLearning/DummyLogin/01-starting-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","AuthContextProvider","props","setIsLoggedIn","isLoggedInInfoLocalStorage","localStorage","getItem","useEffect","loginHandler","email","password","setItem","logoutHandler","removeItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACtCC,EAAAA,UAAU,EAAE,KAD0B;AAEtCC,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAFoB,CAApB,CAApB;AAKA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM,CAACH,UAAD,EAAaI,aAAb,IAA8BP,QAAQ,CAAC,KAAD,CAA5C;AAEA,QAAMQ,0BAA0B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAnC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIH,0BAA0B,KAAK,GAAnC,EAAwC;AACtCD,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACJ,UAAD,CAJM,CAAT;;AAMA,QAAMS,YAAY,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACxCL,IAAAA,YAAY,CAACM,OAAb,CAAqB,YAArB,EAAmC,GAAnC;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAHD;;AAKA,QAAMS,aAAa,GAAG,MAAM;AAC1BP,IAAAA,YAAY,CAACQ,UAAb,CAAwB,YAAxB;AACAV,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKA;AAAA,UAAC,WAAD,CAAa,QAAb;AAAA,cAAuBD,KAAK,CAACY;AAA7B;AAAA;AAAA;AAAA;AAAA;AACD,CArBM;;GAAMb,mB;;KAAAA,mB;AAuBb,eAAeJ,WAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const isLoggedInInfoLocalStorage = localStorage.getItem(\"isLoggedIn\");\n  useEffect(() => {\n    if (isLoggedInInfoLocalStorage === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, [isLoggedIn]);\n\n  const loginHandler = (email, password) => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  <AuthContext.Provider>{props.children}</AuthContext.Provider>;\n};\n\nexport default AuthContext;\n"]},"metadata":{},"sourceType":"module"}